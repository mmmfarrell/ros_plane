<!-- This is a launch file to fly waypoints with the Junker plane 
in the Gazebo simulator. CPP/Python for each node are included
make sure to only have one of each node uncommented. -->


<launch>
  <arg name="mav_name"            default="junker"/>
  <arg name="enable_logging"      default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file"            default="$(arg mav_name)" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find fcu_sim)/worlds/fixed_wing.world"/> <!-- auvsi.world"/> -->
    <arg name="paused" value="true"/>
  </include>

  <!-- Spawn MAV -->
  <include file="$(find fcu_sim)/launch/spawn_mav.launch">
    <arg name="mav_name"            value="$(arg mav_name)" />
    <arg name="model"               value="$(find fcu_sim)/urdf/$(arg mav_name)/$(arg mav_name)_base.xacro" />
    <arg name="enable_logging"      value="$(arg enable_logging)" />
    <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
    <arg name="log_file"          value="$(arg log_file)"/>
  </include>
<!--
  <node name="joy" pkg="fcu_common" type="fcu_common_joy">
    <param name="x_axis" value="0"/>
    <param name="y_axis" value="1"/>
    <param name="yaw_axis" value="4"/>
    <param name="axis_thrust_" value="2"/>
    <param name="y_sign" value="-1"/>
    <param name="x_sign" value="1"/>
  </node>

  <node name="xbox" pkg="joy" type="joy_node">
    <param name="dev" value="/dev/input/js0"/>
  </node>
  -->


<!-- CONTROLLER -->
<!-- CPP -->
  <node name="autopilot" pkg="ros_plane" type="ros_plane_controller" >
<!--     <remap from="command" to="autopilot_command"/>
 -->    <remap from="state" to="/junker/truth"/>
  </node>
<!-- PYTHON -->
 <!--  <node name="autopilot" pkg="ros_plane" type="controller.py"> output="screen"
    <remap from="command" to="autopilot_command"/>
    <remap from="state" to="/junker/truth"/>
  </node> -->

<!-- ESTIMATOR -->
<!-- CPP -->
  <node name="estimator" pkg="ros_plane" type="ros_plane_estimator"> <!-- output="screen" -->
    <remap from="/baro/alt" to="/junker/baro/data"/>
    <remap from="/imu/data" to="/junker/imu/data"/>
    <remap from="/airspeed/data" to="/junker/airspeed/data"/>
  </node>
<!-- PYTHON -->
<!--   <node name="estimator" pkg="ros_plane" type="estimator.py" output="screen">
    <remap from="/baro/alt" to="/junker/baro/data"/>
    <remap from="/imu/data" to="/junker/imu/data"/>
    <remap from="/airspeed/data" to="/junker/airspeed/data"/>
  </node> -->

<!-- PATH FOLLOWER -->
<!-- CPP -->
  <node name="pathfollower" pkg="ros_plane" type="ros_plane_path_follower">
     <remap from="state" to="/junker/truth"/>
  </node>
<!-- PYTHON -->
  <!-- <node name="pathfollower" pkg="ros_plane" type="path_follower.py"> output="screen">
     <remap from="state" to="/junker/truth"/>
  </node> -->

<!-- CAMERA NODE  -->
  <node name="chase" pkg="image_view" type="image_view">
    <remap from="image" to="/junker/chase/camera/rgb"/>
  </node>


<!-- RQT RECONFIGURE GAINS -->
  <!-- <node name="reconfig" pkg="rqt_reconfigure" type="rqt_reconfigure"/>  -->


<!-- PATH MANAGER -->
<!-- CPP -->
  <!-- <node name="pathmanager" pkg="ros_plane" type="ros_plane_path_manager">
     <remap from="state" to="/junker/truth"/>
  </node> -->
<!-- PYTHON -->
  <node name="pathmanager" pkg="ros_plane" type="new_path_manager.py" output="screen">
     <remap from="state" to="/junker/truth"/>
  </node>


<!-- PATH PLANNER -->
  <node name="pathplanner" pkg="ros_plane" type="path_planner.py">
  </node>

<!-- PLOTTER -->
  <node name="plotter" pkg="ros_plane" type="plot_subscriber.py">
  </node>

<!-- TEST INPUTS -->
  <!-- <node name="current_path_publisher" pkg="rostopic" type="rostopic"
    args="pub /current_path fcu_common/FW_Current_Path 'false' '30.0'  '[0.0, 0.0, -100.0]'  '[1.0, 0.0, 0.0]'  '[0.0, 0.0, -100.0]'  '100.0' '1'"/> -->

</launch>
